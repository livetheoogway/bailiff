#compdef bailiff

# Very simple completion for bailiff tool that avoids problematic _describe functions

# Define all options
local -a bailiff_options
bailiff_options=(
  "--help:Show help message"
  "--version:Show version information" 
  "--list:List all summoned tools"
  "--clear-cache:Clear the tool cache"
  "--force:Force check/install regardless of cache"
  "-x:Verbose mode, shows already installed tools"
  "--verbose:Verbose mode, shows already installed tools"
)

# Define package managers
local -a package_managers
package_managers=(
  "brew:Homebrew package manager"
  "apt:Advanced Package Tool"
  "dnf:Package manager for RPM"
  "yum:Yellowdog Updater Modified"
  "pacman:Package manager for Arch"
)

# Define common tools
local -a common_tools
common_tools=(
  "nvim:Neovim text editor"
  "vim:Vi IMproved text editor"
  "htop:Interactive process viewer"
  "jq:JSON processor"
  "rg:Ripgrep search tool"
  "fd:Fast find alternative"
  "bat:Better cat"
  "eza:Modern ls replacement"
  "tmux:Terminal multiplexer"
  "fzf:Fuzzy finder"
)

# Handle special case for first argument
if (( CURRENT == 2 )); then
  _alternative \
    'options:option:compadd -Q -S "" -d bailiff_options -- ${(k)bailiff_options}' \
    'package-managers:package manager:compadd -Q -S " " -d package_managers -- ${(k)package_managers}' \
    'tools:tool:compadd -Q -S "" -d common_tools -- ${(k)common_tools}'
  return
fi

# Handle case for second argument after package manager
if (( CURRENT == 3 )); then
  local first=${words[2]}
  case "$first" in
    brew|apt|dnf|yum|pacman)
      compadd -Q -S "" ${(k)common_tools}
      ;;
    --*)
      # No completions for flags
      ;;
    *)
      # Tool is specified, complete with --force
      compadd --force
      ;;
  esac
  return
fi

# Handle third argument (usually package name or --force)
if (( CURRENT == 4 )); then
  compadd --force
  return
fi